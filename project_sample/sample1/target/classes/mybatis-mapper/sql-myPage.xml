<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.sample1.mapper.MyPageMapper">
	<!-- 예약내역 전체 리스트 출력. 총금액, 사용완료, 사용전, 취소 COUNT -->
	<select id="selectOrder" parameterType="hashmap" resultType="com.example.sample1.model.MyPage">
		SELECT 
			O.*,
			L.TOTAL_PAY,
			L2.USE_Y,
			L3.USE_N,
			L4.USE_C
		FROM T2_ORDER_TBL O
		INNER JOIN (
			SELECT SUM(PAYMENT) AS TOTAL_PAY, ORDER_NO
			FROM T2_ORDER_LIST_TBL
			GROUP BY ORDER_NO
		) L ON L.ORDER_NO = O.ORDER_NO
		LEFT JOIN (
			SELECT COUNT(*) AS USE_Y, ORDER_NO
			FROM T2_ORDER_LIST_TBL
			WHERE USE_YNC = 'Y'
			GROUP BY ORDER_NO
		) L2 ON L2.ORDER_NO = O.ORDER_NO
		LEFT JOIN (
			SELECT COUNT(*) AS USE_N, ORDER_NO
			FROM T2_ORDER_LIST_TBL
			WHERE USE_YNC = 'N'
			GROUP BY ORDER_NO
		) L3 ON L3.ORDER_NO = O.ORDER_NO
		LEFT JOIN (
			SELECT COUNT(*) AS USE_C, ORDER_NO
			FROM T2_ORDER_LIST_TBL
			WHERE USE_YNC = 'C'
			GROUP BY ORDER_NO
		) L4 ON L4.ORDER_NO = O.ORDER_NO
		WHERE O.U_ID = #{userId}
	</select>

	<!-- 예약한 제품의 핸드폰, 이메일 등의 정보 출력 -->
	<select id="selectOrderUserInfo" parameterType="hashmap" resultType="com.example.sample1.model.MyPage">
		SELECT *
		FROM T2_ORDER_TBL
		WHERE ORDER_NO = #{orderNo}
	</select>
	
	
	<!-- 예약 취소 -->
	<update id="selectBookingCancel" parameterType="hashmap">
		UPDATE T2_ORDER_TBL O
		INNER JOIN T2_ORDER_LIST_TBL L ON O.ORDER_NO = L.ORDER_NO
		SET
			USE_YNC = 'C'
		WHERE U_ID = #{userId} AND PRODUCT_NO = #{productNo}
	</update>
	
	<select id="selectJjim" parameterType="hashmap" resultType="com.example.sample1.model.MyPage">
		SELECT DISTINCT *
		FROM T2_JJIM_TBL J
		LEFT JOIN (
		   SELECT S.*, R.MIN_PRICE, R.ROOM_SALES
		   FROM  T2_STAY_TBL S
		   INNER JOIN (
		      SELECT MIN(ROOM_PRICE) AS MIN_PRICE, ROOM_NO, STAY_NO, ROOM_SALES
		      FROM T2_ROOM_TBL 
		      GROUP BY STAY_NO
		   ) R ON R.STAY_NO = S.STAY_NO
		) S ON S.STAY_NO = J.PRODUCT_NO AND J.product_kind = 'STAY'
		LEFT JOIN T2_RENT_CAR_TBL on rent_no = product_no and product_kind = 'RENT'
		LEFT JOIN T2_LEISURE_TBL on leisure_no = product_no and product_kind = 'LEISURE'
		WHERE J.U_ID = #{userId}
		LIMIT #{startNum}, #{lastNum}
	</select>
	
	<select id="selectCnt" resultType="int">
		SELECT COUNT(*) FROM T2_JJIM_TBL
	</select>
	
	<select id="selectPoint" parameterType="hashmap" resultType="com.example.sample1.model.MyPage">
		SELECT *
		FROM T2_USER_POINT_TBL
		WHERE U_ID = #{userId}
	</select>
	<!-- 나의 리뷰 불러오기 -->
	<select id="selectReview" parameterType="hashmap" resultType="com.example.sample1.model.MyPage">
		SELECT *
		FROM T2_REVIEW_TBL
		WHERE U_ID = #{userId} AND DELYN = 'N'
	</select>
    <!-- 나의 리뷰 카운트 -->
	<select id="selectReviewCnt" parameterType="hashmap" resultType="int">
		SELECT COUNT(*) AS CNT
		FROM T2_REVIEW_TBL
		WHERE U_ID = #{userId} AND DELYN = 'N'
	</select>
	<!--나의 리뷰 삭제 -->
	<update id="deleteReview" parameterType="hashmap">
		UPDATE T2_REVIEW_TBL
		SET
			DELYN = 'Y'
		WHERE R_NO = #{rNo}
	</update>

	<!-- 나의 1:1문의 불러오기 -->
	<select id="selectInquiry" parameterType="hashmap" resultType="com.example.sample1.model.Inquiry">
		SELECT *
		FROM T2_INQUIRY_TBL
		WHERE U_ID = #{userId}
	</select>
	<!--나의 1:1문의 삭제 -->
	<update id="deleteInquiry" parameterType="hashmap">
		UPDATE T2_INQUIRY_TBL
		SET
			DELYN = 'Y'
		WHERE I_NO = #{iNo}
	</update>
	<!-- 나의 1:1문의 수정창 -->
	<select id="selectInquiryInfo" parameterType="hashmap" resultType="com.example.sample1.model.Inquiry">
		SELECT *
		FROM T2_INQUIRY_TBL
		WHERE I_NO = #{iNo}
	</select>
	<!-- 나의 1:1문의 수정하기 -->
	<update id="editInquiry" parameterType="hashmap">
		UPDATE T2_INQUIRY_TBL
		SET
			I_TITLE = #{iTitle},
			I_CONTENT = #{iContent},
			I_UPDATE_TIME = NOW()
		WHERE I_NO = #{iNo}
	</update>
	
	<!-- 찜목록 딜리트  -->
	<delete id="deleteJjimCheck" parameterType="hashmap">
		DELETE
		FROM T2_JJIM_TBL
		WHERE PRODUCT_NO IN
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>
	<!--예약내역 취소 -->
	<update id="bookingCancel" parameterType="hashmap">
		UPDATE T2_ORDER_TBL
		SET
			USE_YNC = 'C'
		WHERE U_ID = #{userId}
	</update>
</mapper>